ext4: suppress inode growth for file systems w/o project quota

We have not added a new "extra" inode field in a very long time, and
the code to deal with moving the extended attributes down to make room
for the extra inode fields has bitrotted and can cause kernel BUGS.

Very few people will likely use project quotas (and those that do will
likely be creating a new file system from scratch) so as a temporary
pallative until we are sure the inode expansion code is all sane,
let's not try to expand the inode "extra" fields if the project
feature has not been enabled.

Cc: stable@vger.kernel.org # v4.4+
Signed-off-by: Theodore Ts'o <tytso@mit.edu>
---
 fs/ext4/super.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/fs/ext4/super.c b/fs/ext4/super.c
index c13a4e4..e2622ba 100644
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@ -3968,6 +3968,17 @@ no_journal:
 	if (sbi->s_inode_size > EXT4_GOOD_OLD_INODE_SIZE) {
 		sbi->s_want_extra_isize = sizeof(struct ext4_inode) -
 						     EXT4_GOOD_OLD_INODE_SIZE;
+		/*
+		 * This is a temporary hack; we have not added a new
+		 * "extra" inode field in a long time, and the code to
+		 * expand the inode structure has bitrotted and can
+		 * cause kernel BUG's.  If the file system does not
+		 * have the project feature, let's not try to expand
+		 * the inode's extra size as a temporary pallitive
+		 * until we can fix up the inode expansion code.
+		 */
+		if (!ext4_has_feature_project(sb))
+			sbi->s_want_extra_isize -= sizeof(__le32);
 		if (ext4_has_feature_extra_isize(sb)) {
 			if (sbi->s_want_extra_isize <
 			    le16_to_cpu(es->s_want_extra_isize))
